name: Build & Test

on: [push, pull_request]

permissions: read-all

env:
  DOCKER_IMAGE_NAME: 'your-docker-image-name:latest'

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7.13'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: Run DVGA
        run: |
          nohup python3 ./app.py &

      - name: Wait for server (sleep 5 secs)
        run: |
          sleep 5

      - name: Run DVGA Tests
        run: |
          python3 -m pytest tests/*

  build:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker Image
        run: docker build -t ${DOCKER_IMAGE_NAME} .
        
      - name: Manifest Generation
        run: |
          docker save -o ./graphql.tar ${DOCKER_IMAGE_NAME}
          export BILLY_SERVER=https://billy.asia-1.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum --check; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GITHUB_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --cspm-url https://asia-1.api.cloudsploit.com \
            --artifact-path ${DOCKER_IMAGE_NAME}

            # The docker image name:tag of the newly built image
            # --artifact-path "my-image-name:${{ env.tag-version }}" 
            # OR the path to the root folder of your project. I.e my-repo/my-app 
            # --artifact-path "${{env.MY_APP_ROOT}}"
        
